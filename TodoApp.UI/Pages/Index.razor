@page "/"
@using TodoApp.Shared.DTO;
@using TodoApp.UI.Services;
@inject IQuestService QuestService

<PageTitle>Quests</PageTitle>

<h1 data-name="quests-information">Hello, add a quest that to be done!</h1>

@if (Loading)
{
    <LoadingIconComponent />
}
else
{
    <div class="mt-2">
        <div class="mb-2">
            <AddQuestComponent OnAdd="AddQuest" />
        </div>
        <QuestsComponent Quests="quests" OnUpdate="UpdateQuest" OnDelete="DeleteQuest" OnChangeStatus="ChangeStatus" />
    </div>
}

@code {
    public bool Loading { get; set; } = true;
    private List<QuestDto> quests = new();

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        FetchQuests();
        await base.OnInitializedAsync();
        Loading = false;
    }

    private void AddQuest(QuestDto questDto)
    {
        QuestService.Add(questDto);
        FetchQuests();
    }

    private void UpdateQuest(QuestDto questDto)
    {
        QuestService.Update(questDto);
        FetchQuests();
    }

    private void DeleteQuest(QuestDto questDto)
    {
        if (questDto is null)
        {
            return;
        }

        QuestService.Delete(questDto.Id);
        FetchQuests();
    }

    private void ChangeStatus(ChangeQuestStatus changeQuestStatus)
    {
        QuestService.ChangeStatus(changeQuestStatus);
        FetchQuests();
    }

    private void FetchQuests()
    {
        Loading = true;
        quests = QuestService.GetAll();
        Loading = false;
    }
}